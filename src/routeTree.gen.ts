/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ExpensesIndexImport } from './routes/expenses/index'
import { Route as CategoriesIndexImport } from './routes/categories/index'
import { Route as ExpensesExpenseIdImport } from './routes/expenses/$expenseId'
import { Route as CategoriesNewImport } from './routes/categories/new'
import { Route as CategoriesCategoryIdImport } from './routes/categories/$categoryId'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const ExpensesIndexRoute = ExpensesIndexImport.update({
  id: '/expenses/',
  path: '/expenses/',
  getParentRoute: () => rootRoute,
} as any)

const CategoriesIndexRoute = CategoriesIndexImport.update({
  id: '/categories/',
  path: '/categories/',
  getParentRoute: () => rootRoute,
} as any)

const ExpensesExpenseIdRoute = ExpensesExpenseIdImport.update({
  id: '/expenses/$expenseId',
  path: '/expenses/$expenseId',
  getParentRoute: () => rootRoute,
} as any)

const CategoriesNewRoute = CategoriesNewImport.update({
  id: '/categories/new',
  path: '/categories/new',
  getParentRoute: () => rootRoute,
} as any)

const CategoriesCategoryIdRoute = CategoriesCategoryIdImport.update({
  id: '/categories/$categoryId',
  path: '/categories/$categoryId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/categories/$categoryId': {
      id: '/categories/$categoryId'
      path: '/categories/$categoryId'
      fullPath: '/categories/$categoryId'
      preLoaderRoute: typeof CategoriesCategoryIdImport
      parentRoute: typeof rootRoute
    }
    '/categories/new': {
      id: '/categories/new'
      path: '/categories/new'
      fullPath: '/categories/new'
      preLoaderRoute: typeof CategoriesNewImport
      parentRoute: typeof rootRoute
    }
    '/expenses/$expenseId': {
      id: '/expenses/$expenseId'
      path: '/expenses/$expenseId'
      fullPath: '/expenses/$expenseId'
      preLoaderRoute: typeof ExpensesExpenseIdImport
      parentRoute: typeof rootRoute
    }
    '/categories/': {
      id: '/categories/'
      path: '/categories'
      fullPath: '/categories'
      preLoaderRoute: typeof CategoriesIndexImport
      parentRoute: typeof rootRoute
    }
    '/expenses/': {
      id: '/expenses/'
      path: '/expenses'
      fullPath: '/expenses'
      preLoaderRoute: typeof ExpensesIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/categories/$categoryId': typeof CategoriesCategoryIdRoute
  '/categories/new': typeof CategoriesNewRoute
  '/expenses/$expenseId': typeof ExpensesExpenseIdRoute
  '/categories': typeof CategoriesIndexRoute
  '/expenses': typeof ExpensesIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/categories/$categoryId': typeof CategoriesCategoryIdRoute
  '/categories/new': typeof CategoriesNewRoute
  '/expenses/$expenseId': typeof ExpensesExpenseIdRoute
  '/categories': typeof CategoriesIndexRoute
  '/expenses': typeof ExpensesIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/categories/$categoryId': typeof CategoriesCategoryIdRoute
  '/categories/new': typeof CategoriesNewRoute
  '/expenses/$expenseId': typeof ExpensesExpenseIdRoute
  '/categories/': typeof CategoriesIndexRoute
  '/expenses/': typeof ExpensesIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/categories/$categoryId'
    | '/categories/new'
    | '/expenses/$expenseId'
    | '/categories'
    | '/expenses'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/categories/$categoryId'
    | '/categories/new'
    | '/expenses/$expenseId'
    | '/categories'
    | '/expenses'
  id:
    | '__root__'
    | '/'
    | '/categories/$categoryId'
    | '/categories/new'
    | '/expenses/$expenseId'
    | '/categories/'
    | '/expenses/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  CategoriesCategoryIdRoute: typeof CategoriesCategoryIdRoute
  CategoriesNewRoute: typeof CategoriesNewRoute
  ExpensesExpenseIdRoute: typeof ExpensesExpenseIdRoute
  CategoriesIndexRoute: typeof CategoriesIndexRoute
  ExpensesIndexRoute: typeof ExpensesIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  CategoriesCategoryIdRoute: CategoriesCategoryIdRoute,
  CategoriesNewRoute: CategoriesNewRoute,
  ExpensesExpenseIdRoute: ExpensesExpenseIdRoute,
  CategoriesIndexRoute: CategoriesIndexRoute,
  ExpensesIndexRoute: ExpensesIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/categories/$categoryId",
        "/categories/new",
        "/expenses/$expenseId",
        "/categories/",
        "/expenses/"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/categories/$categoryId": {
      "filePath": "categories/$categoryId.tsx"
    },
    "/categories/new": {
      "filePath": "categories/new.tsx"
    },
    "/expenses/$expenseId": {
      "filePath": "expenses/$expenseId.tsx"
    },
    "/categories/": {
      "filePath": "categories/index.tsx"
    },
    "/expenses/": {
      "filePath": "expenses/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
